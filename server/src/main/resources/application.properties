
logging.level.app.ister.server.entitiy=trace
logging.group.tomcat=app.ister.server
logging.level.tomcat=trace

# swagger-ui custom path
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.oauth.clientId=ister
springdoc.oAuthFlow.openIdConnectUrl=${OIDC_URL:http://localhost:8060/realms/Ister}/.well-known/openid-configuration

# Graphql
spring.graphql.graphiql.enabled=true

# Spring security
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OIDC_URL:https://localhost:8060/realms/Ister}

app.ister.server.ffmpeg-dir=${FFMPEG_DIR:/usr/bin}
app.ister.server.tmp-dir=${TMP_DIR:/tmp/}
app.ister.server.cache-dir=${CACHE_DIR:/cache/}

# The name of the server this needs to be unique for every connected server.
app.ister.server.name=Test server
# The url where the client and the other server can reach this server
app.ister.server.url=http://localhost:8080

# If you want to get metadata from the movie db set here you'r api read access token.
#app.ister.server.TMDB.apikey=API Read Access Token

# The libraries
#app.ister.server.libraries[0].name=shows
#app.ister.server.libraries[0].type=SHOW

# The directories
#app.ister.server.directories[0].name=disk1
#app.ister.server.directories[0].path=/disk1
#app.ister.server.directories[0].library=shows
#app.ister.server.directories[1].name=disk2
#app.ister.server.directories[1].path=/disk2
#app.ister.server.directories[1].library=shows

spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PATH:5432}/${DB_NAME:ister}
spring.datasource.username=${DB_USER:ister}
spring.datasource.password=${DB_PASSWORD:ister}
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=${DB_DIALECT:org.hibernate.dialect.PostgreSQLDialect}

#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

management.endpoints.web.exposure.include=health,metrics,prometheus
management.server.port=8081
